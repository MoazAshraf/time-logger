/* = Custom Fonts */
@font-face {
    font-family: 'Alata';
    src: url('./fonts/alata-regular-webfont.woff2') format('woff2'),
         url('./fonts/alata-regular-webfont.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'nunito';
    src: url('fonts/nunito-regular-webfont.woff2') format('woff2'),
         url('fonts/nunito-regular-webfont.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}

@font-face {
    font-family: 'nunito';
    src: url('fonts/nunito-bold-webfont.woff2') format('woff2'),
         url('fonts/nunito-bold-webfont.woff') format('woff');
    font-weight: bold;
    font-style: normal;
}

@font-face {
    font-family: 'nunito-black';
    src: url('fonts/nunito-black-webfont.woff2') format('woff2'),
         url('fonts/nunito-black-webfont.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}

/* = General Styles */
html {
    font-size: 10px;
    font-family: nunito, Helvetica, Arial, sans-serif;
    /* height: 100vh; */
}

body {
    background-color: #474747;
    color: white;
    font-size: 1.6rem;
}

input, button {
    font: inherit;
    color: inherit;
    outline: none;
    border: none;
}

button {
    box-sizing: border-box;
    background: none;
    width: 2rem;
    height: 2rem;
    padding: 0;
    border-radius: 2px;
    transition: 0.1s ease;
    filter: brightness(0.8);
}

button:hover {
    background-color: #00000033;
    filter: brightness(1);
}

button:active {
    /* background-color: #00000066; */
    transform: scale(0.9);
}

input[type="text"] {
    background-color: #00000080;
    border-radius: 0.2rem;
}

ul {
    padding: 0;
    margin: 0;
    list-style: none;
}

h1 {
    padding: 0;
    margin: 0;
    font-size: 1.8em;
}

img {
    max-width: 100%;
}

button img {
    width: 100%;
    user-select: none;
}

/* = Checkboxes */
.checkbox-label {
    display: flex;
    gap: 0.4rem;
    align-items: center;
}

input[type="checkbox"] {
    -webkit-appearance: none;
    appearance: none;
}

input[type="checkbox"]::before {
    display: block;
    content: "";
    width: 2rem;
    height: 2rem;
    background-image: url(images/checkbox-unchecked.png);
    background-size: contain;
    transition: 0.1s;
    filter: brightness(0.8);
}

input[type="checkbox"]:checked::before {
    background-image: url(images/checkbox-checked.png);
    filter: brightness(1);
}

input[type="checkbox"]:hover::before {
    filter: brightness(1);
}

input[type="checkbox"]:active::before {
    transform: scale(0.9);
}

/* = Main Layout */
html {
    height: 100vh;
}

body {
    box-sizing: border-box;
    height: 100%;
    margin: 0 auto;
    padding-top: 2rem;
    display: flex;
    flex-flow: column;
    width: 48rem;
}

header, footer {
    font-family: Alata, Helvetica, Arial, sans-serif;
}

/* = Header */
header {
    text-align: center;
    padding: 1rem;
    background-color: #bc3f3f;
    border-radius: 0.4rem 0.4rem 0 0;
    box-shadow: 0px 0px 4px #0000005e;
}


/* = Main Content */
.app {
    background-color: #2d2d2d;
    padding: 0.4rem;
    display: grid;
    gap: 0.8rem;
    border-radius: 0 0 0.4rem 0.4rem;
    box-shadow: 0px 0px 4px #0000005e;
}

main {
    flex: 1;
}

/* = Task List */
/* = Task */
.task {
    padding: 0.4rem 0rem;
    display: flex;
    gap: 1.2rem;
    justify-content: space-between;
    align-items: center;
}

.task.doing .task-toggle-btn {
    filter: brightness(1);
}

.task-name {
    flex: 2;
    filter: brightness(0.8);
}

.task-duration {
    flex: 1 0;
    text-align: right;
    filter: brightness(0.8);
}

.task.doing .task-name, .task.doing .task-duration {
    font-family: nunito-black;
    filter: brightness(1);
}

/* = New Task */
.new-task-input {
    /* TODO: use a grid instead of hard coding */
    margin-left: 3.2rem;
}


/* = Footer */
footer {
    padding: 0.8rem;
    text-align: center;
}